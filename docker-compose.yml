version: '3.9'

services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 3000
  
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "create-order:1:1,order-status:1:1,payment:1:1,order-products:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka-startup-scripts:/opt/kafka-startup-scripts
    restart: on-failure

  akhq:
    image: tchiotludo/akhq
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      AKHQ_CONFIGURATION: |
          akhq:
            connections:
              kafka:
                properties:
                  bootstrap.servers: "kafka:9092"
                  default.api.timeout.ms: 15000000

  db:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: grabber
    ports:
      - "5432:5432"

  rest-api:
    build: .
    volumes:
      - .:/app
    tty: true
    depends_on:
      - db
      - kafka
    ports:
      - 8000:8000
    # command: uvicorn grabber_backend.api.app:app --host 0.0.0.0 --port 8000
    restart: on-failure

  order-manager:
    build: .
    volumes:
      - .:/app
    tty: true
    depends_on:
      - db
      - kafka
    command: python grabber_backend/services/order_service/kafka_middleware/main.py
    restart: on-failure

volumes:
  postgres: